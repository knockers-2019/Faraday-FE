syntax = "proto3";

option csharp_namespace = "FaradayGrpcServer";

package Booking;

service Bookings {
	//Bookings
	rpc GetBookingModel (BookingId) returns (BookingModel);
	rpc CreateBookingModel (BookingModel) returns (BookingId);
	rpc GetAllBookingModels (EmptyRequest) returns (stream BookingModel);
	rpc GetCustomerBookingModels (CustomerModel) returns (stream BookingModel);
	rpc GetAllActiveBookings (EmptyRequest) returns (stream BookingModel);
	rpc CancelBookingModel (BookingModel) returns (AffectedRows);
	//Cars
	rpc GetCarModel (CarId) returns (CarModel);
	rpc CreateCarModel (CarModel) returns (CarId);
	rpc GetAllCarModels (EmptyRequest) returns (stream CarModel);
	rpc GetAllAvailableCarModelsAtLocation (LocationModel) returns (stream CarModel);
	//Customers
	rpc GetCustomerModel (CustomerId) returns (CustomerModel);
	rpc CreateCustomerModel (CustomerModel) returns (CustomerId);
	rpc GetAllCustomerModels (EmptyRequest) returns (stream CustomerModel);
	rpc GetCustomerModelByDriversLicense (CustomerDriversLicense) returns (CustomerModel);
	//Locations
	rpc GetLocationModel (LocationId) returns (LocationModel);
	rpc GetAllLocationModels (EmptyRequest) returns (stream LocationModel);
}

//Bookings
message BookingModel {
	int32 id = 1;
	LocationModel pickup_location = 2;
	LocationModel dropoff_location = 3;
	CarModel car = 4;
	CustomerModel customer = 5;
	string pickup_date = 6;
	string dropoff_date = 7;
	bool is_cancelled = 8;
}

message BookingId {
	int32 id = 1;
}

//Cars
message CarModel {
	int32 id = 1;
	string brand = 2;
	string model = 3;
	string color = 4;
	string fuel_type = 5;
	string car_type = 6;
	int32 doors = 7;
	string license_plate = 8;
	bool animals_allowed = 9;
	double price = 10;
	bool available = 11;
	LocationModel location = 12;
}

message CarId {
	int32 id = 1;
}

//Customers
message CustomerModel {
	int32 id = 1;
	string first_name = 2;
	string last_name = 3;
	string gender = 4;
	string drivers_license = 5;
}

message CustomerId {
	int32 id = 1;
}

message CustomerDriversLicense {
	string drivers_license = 1;
}

//Locations
message LocationModel {
	int32 id = 1;
	string address = 2;
	string city = 3;
	string zipcode = 4;
	string country = 5;
}

message LocationId {
	int32 id = 1;
}

//Other
message EmptyRequest {

}

message AffectedRows{
	int32 affected_rows = 1;
}